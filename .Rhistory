#getwd()
#setwd("")
library(rio)
dataDRE = import("DRE Lima.csv")
#names(dataDRE)
#str(dataDRE)
#class(dataDRE)
dataDRE$P1_1 = as.factor(dataDRE$P1_1)
dataDRE$P1_1 = factor(dataDRE$P1_1,
levels = levels(dataDRE$P1_1),
labels = c("Masculino","Femenino"),
ordered = F)
#str(dataDRE$P1_1)
#Tabla de los docentes encuestados respecto a su género
table(dataDRE$P1_1)
prop.table(table(dataDRE$P1_1))*100
library(Hmisc)
describe(dataDRE$P1_1)
library(Hmisc)
describe(dataDRE$P1_1)
grafico1 <- table(dataDRE$P1_1) #creamos un objeto que contenga la tabla de frecuencias de la variable
grafico1 = as.data.frame(grafico1) #dataframe
colnames(grafico1) = c("Reg","Freq") #renombrar
library(ggplot2)
bp = ggplot(grafico1, aes(x=reorder(Reg,Freq), y=Freq, fill=Reg)) + #aes(x=reorder(Reg,Freq) --> así para ordenar las barras ascendentemente
geom_bar(stat = "identity") +
coord_flip() +
labs(title="Docentes según sexo (ENDO 2020)", y="Frecuencias", x="Categorías")+
theme(plot.title = element_text(hjust = 1)) +
theme(panel.background=element_rect(fill = "white", colour = "white")) +
geom_text(aes(label=Freq), vjust=0.5, color="Black", size=5) #Frecuencias en las barras
bp
grafico1 <- table(dataDRE$P1_1) #creamos un objeto que contenga la tabla de frecuencias de la variable
grafico1 = as.data.frame(grafico1) #dataframe
colnames(grafico1) = c("Reg","Freq") #renombrar
library(ggplot2)
bp = ggplot(grafico1, aes(x=reorder(Reg,Freq), y=Freq, fill=Reg)) + #aes(x=reorder(Reg,Freq) --> así para ordenar las barras ascendentemente
geom_bar(stat = "identity") +
coord_flip() +
labs(title="Docentes según sexo (ENDO 2020)", y="Frecuencias", x="Categorías")+
theme(plot.title = element_text(hjust = 1)) +
theme(panel.background=element_rect(fill = "white", colour = "white")) +
geom_text(aes(label=Freq), vjust=0.5, color="Black", size=5) #Frecuencias en las barras
bp
pc = ggplot(grafico1, aes(x="", y=Freq, fill=Reg)) +
ggtitle("Docentes según sexo (ENDO 2020)") + #Agregamos el título
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void()
pc + scale_fill_brewer(palette="Dark2") #Color del gráfico
pc = ggplot(grafico1, aes(x="", y=Freq, fill=Reg)) +
ggtitle("Docentes según sexo (ENDO 2020)") + #Agregamos el título
geom_bar(stat="identity", width=1, color="black") +
coord_polar("y", start=0) +
theme_void()
pc + scale_fill_brewer(palette="Dark2") #Color del gráfico
#table(dataDRE$P1_2) #correr en console
#class(dataDRE$P1_2) #correr en console
#str(dataDRE$P1_2)
dataDRE$P1_2 = as.numeric(dataDRE$P1_2)
#str(dataDRE$P1_2) #En Console
#table(dataDRE$P1_2) #correr en console
#class(dataDRE$P1_2) #correr en console
#str(dataDRE$P1_2)
dataDRE$P1_2 = as.numeric(dataDRE$P1_2)
summary(dataDRE$P1_2) # Mediana # Media # Percentiles
library(DescTools)
Mode(dataDRE$P1_2, na.rm = T)  # Moda
table(dataDRE$P1_2)
describe(dataDRE$P1_2) # Percentiles y los valores mas altos y más bajos, para sacar outliers.
summary(dataDRE$P1_2) # Mediana # Media # Percentiles
library(DescTools)
Mode(dataDRE$P1_2, na.rm = T)  # Moda
table(dataDRE$P1_2)
describe(dataDRE$P1_2) # Percentiles y los valores mas altos y más bajos, para sacar outliers.
summary(dataDRE$P1_2) # Mediana # Media # Percentiles
library(DescTools)
Mode(dataDRE$P1_2, na.rm = T)  # Moda
table(dataDRE$P1_2)
library(Hmisc)
describe(dataDRE$P1_2) # Percentiles y los valores mas altos y más bajos, para sacar outliers.
summary(dataDRE$P1_2) # Mediana # Media # Percentiles
library(DescTools)
Mode(dataDRE$P1_2, na.rm = T)
table(dataDRE$P1_2)
IR=55-41
Valorextremosuperior = 55+1.5*IR
Valorextremosuperior
Valorextremoinferior = 41-1.5*IR
Valorextremoinferior
summary(dataDRE$P1_2) # Mediana # Media # Percentiles
library(DescTools)
Mode(dataDRE$P1_2, na.rm = T)  # Moda
#table(dataDRE$P1_2)
library(Hmisc)
describe(dataDRE$P1_2) # Percentiles y los valores mas altos y más bajos, para sacar outliers.
summary(dataDRE$P1_2) # Mediana # Media # Percentiles
library(DescTools)
Mode(dataDRE$P1_2, na.rm = T)  # Moda
table(dataDRE$P1_2)
prop.table(table(dataDRE$P1_2))*100
a = 100 - 4.6072508
a
b = (1324 - 691) - 52
b
summary(dataDRE$P1_2)
quantile(dataDRE$P1_2, na.rm=T) # Percentiles
sd(dataDRE$P1_2, na.rm = T) #desviación
var(dataDRE$P1_2, na.rm = T) #varianza
IQR(dataDRE$P1_2, na.rm = T) #na.rm = T no considera los valores perdidos
summary(dataDRE$P1_2)
#boxplot(dataDRE$P1_2,col = "pink") # Básico de R
ggplot(dataDRE, aes(x="", y=P1_2, color ="")) +
geom_boxplot() + coord_flip() + #Volteamos el gráfico
theme(legend.position = "top", axis.text.y = element_blank(),
panel.background=element_rect(fill = "white", colour = "white")) + #Quitamos categorías
geom_jitter(shape=16, position=position_jitter(0.2)) + #Agregamos los casos como puntos
labs(title = "Edad de los profesores encuestadxs", x="", y="Index")
#hist(dataDRE$P1_2) # Básico de R
ggplot(dataDRE, aes(x=P1_2, color = "")) +
geom_histogram(fill="white",alpha=0.5, position="identity") +
labs(title="Edad de los profesores encuestadxs", y="", x="Index")+
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.background=element_rect(fill = "white", colour = "white"))
table(dataDRE$P1_2)
#boxplot(dataDRE$P1_2,col = "pink") # Básico de R
ggplot(dataDRE, aes(x="", y=P1_2, color ="")) +
geom_boxplot() + coord_flip() + #Volteamos el gráfico
theme(legend.position = "top", axis.text.y = element_blank(),
panel.background=element_rect(fill = "white", colour = "white")) + #Quitamos categorías
geom_jitter(shape=16, position=position_jitter(0.2)) + #Agregamos los casos como puntos
labs(title = "Edad de los profesores encuestadxs", x="", y="Index")
library(moments)
skewness(dataDRE$P1_2, na.rm = T)
kurtosis(dataDRE$P1_2, na.rm = T)
barplot(dataDRE$P1_2)
library(moments)
skewness(dataDRE$P1_2, na.rm = T)
kurtosis(dataDRE$P1_2, na.rm = T)
hist(dataDRE$P1_2)
hist(dataDRE$P1_2)
library(DescTools)
Mode(dataDRE$P1_2, na.rm = T)  # Moda
#table(dataDRE$P1_2)
#prop.table(table(dataDRE$P1_2))*100
prop.table(table(dataDRE$P1_2))*100
table(dataDRE$P1_2)
hist(dataDRE$P1_2)
install_formats()
#getwd()
#setwd("")
library(rio)
dataDRE = import("DRE Lima.csv")
#names(dataDRE)
#str(dataDRE)
#class(dataDRE)
levels(dataDRE$P1_1)
#class(dataDRE$P1_1)
#str(dataDRE$P1_1)
#levels(dataDRE$P1_1) # Vemos cuales son los levels del factor
dataDRE$P1_1 = as.factor(dataDRE$P1_1)
dataDRE$P1_1 = factor(dataDRE$P1_1,
levels = levels(dataDRE$P1_1),
labels = c("Masculino","Femenino"),
ordered = F)
#str(dataDRE$P1_1)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#getwd()
#setwd("")
library(rio)
dataDRE = import("DRE Lima.csv")
#names(dataDRE)
#str(dataDRE)
#class(dataDRE)
#class(dataDRE$P1_1)
#str(dataDRE$P1_1)
#levels(dataDRE$P1_1) # Vemos cuales son los levels del factor
dataDRE$P1_1 = as.factor(dataDRE$P1_1)
dataDRE$P1_1 = factor(dataDRE$P1_1,
levels = levels(dataDRE$P1_1),
labels = c("Masculino","Femenino"),
ordered = F)
#str(dataDRE$P1_1)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#getwd()
#setwd("")
library(rio)
dataDRE = import("DRE Lima.csv")
#names(dataDRE)
#str(dataDRE)
#class(dataDRE)
levels(dataDRE$P1_1)
class(dataDRE$P1_1)
str(dataDRE$P1_1)
dataDRE$P1_1 = as.factor(dataDRE$P1_1)
levels(dataDRE$P1_1)
#class(dataDRE$P1_1)
#str(dataDRE$P1_1)
dataDRE$P1_1 = as.factor(dataDRE$P1_1)
#levels(dataDRE$P1_1) # Vemos cuales son los levels del factor
dataDRE$P1_1 = factor(dataDRE$P1_1,
levels = levels(dataDRE$P1_1),
labels = c("Masculino","Femenino"),
ordered = F)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#getwd()
#setwd("")
library(rio)
dataDRE = import("DRE Lima.csv")
#names(dataDRE)
#str(dataDRE)
#class(dataDRE)
#class(dataDRE$P1_1)
#str(dataDRE$P1_1)
dataDRE$P1_1 = as.factor(dataDRE$P1_1)
#levels(dataDRE$P1_1) # Vemos cuales son los levels del factor
dataDRE$P1_1 = factor(dataDRE$P1_1,
levels = C(1:2),
labels = c("Masculino","Femenino"),
ordered = F)
#class(dataDRE$P1_1)
#str(dataDRE$P1_1)
dataDRE$P1_1 = as.factor(dataDRE$P1_1)
#levels(dataDRE$P1_1) # Vemos cuales son los levels del factor
dataDRE$P1_1 = factor(dataDRE$P1_1,
levels = levels(dataDRE$P1_1),
labels = c("Masculino","Femenino"),
ordered = F)
knitr::opts_chunk$set(warning = FALSE, message = FALSE)
#getwd()
#setwd("")
library(rio)
dataDRE = import("DRE Lima.csv")
#names(dataDRE)
#str(dataDRE)
#class(dataDRE)
#class(dataDRE$P1_1)
#str(dataDRE$P1_1)
dataDRE$P1_1 = as.factor(dataDRE$P1_1)
#levels(dataDRE$P1_1) # Vemos cuales son los levels del factor
dataDRE$P1_1 = factor(dataDRE$P1_1,
levels = levels(dataDRE$P1_1),
labels = c("Masculino","Femenino"),
ordered = F)
#Tabla de los docentes encuestados respecto a su género
table(dataDRE$P1_1)
prop.table(table(dataDRE$P1_1))*100
library(Hmisc)
describe(dataDRE$P1_1)
grafico1 <- table(dataDRE$P1_1) #creamos un objeto que contenga la tabla de frecuencias de la variable
grafico1 = as.data.frame(grafico1) #dataframe
colnames(grafico1) = c("Reg","Freq") #renombrar
library(ggplot2)
bp = ggplot(grafico1, aes(x=reorder(Reg,Freq), y=Freq, fill=Reg)) + #aes(x=reorder(Reg,Freq) --> así para ordenar las barras ascendentemente
geom_bar(stat = "identity") +
coord_flip() +
labs(title="Docentes según sexo (ENDO 2020)", y="Frecuencias", x="Categorías")+
theme(plot.title = element_text(hjust = 1)) +
theme(panel.background=element_rect(fill = "white", colour = "white")) +
geom_text(aes(label=Freq), vjust=0.5, color="Black", size=5) #Frecuencias en las barras
bp
pc = ggplot(grafico1, aes(x="", y = Freq, fill = Reg)) +
ggtitle("Docentes según sexo (ENDO 2020)") + #Agregamos el título
geom_bar(stat = "identity", width = 1, color="white") +
coord_polar("y", start=0) +
theme_void()
pc + scale_fill_brewer(palette="Dark2") #Color del gráfico
#table(dataDRE$P1_2) #correr en console
#class(dataDRE$P1_2) #correr en console
#str(dataDRE$P1_2)
dataDRE$P1_2 = as.numeric(dataDRE$P1_2)
summary(dataDRE$P1_2) # Mediana # Media # Percentiles
library(DescTools)
Mode(dataDRE$P1_2, na.rm = T)  # Moda
#table(dataDRE$P1_2)
#prop.table(table(dataDRE$P1_2))*100
library(Hmisc)
describe(dataDRE$P1_2) # Percentiles y los valores mas altos y más bajos, para sacar outliers.
a = 100 - 4.6072508
a
b = (1324 - 691) - 52
b
quantile(dataDRE$P1_2, na.rm=T) # Percentiles
sd(dataDRE$P1_2, na.rm = T) #desviación
var(dataDRE$P1_2, na.rm = T) #varianza
IQR(dataDRE$P1_2, na.rm = T) #na.rm = T no considera los valores perdidos
# OTRA OPCION:
IR=55-41
Valorextremosuperior = 55+1.5*IR
Valorextremosuperior
Valorextremoinferior = 41-1.5*IR
Valorextremoinferior
library(moments)
skewness(dataDRE$P1_2, na.rm = T)
#hist(dataDRE$P1_2)
kurtosis(dataDRE$P1_2, na.rm = T)
#hist(dataDRE$P1_2) # Básico de R
ggplot(dataDRE, aes(x=P1_2, color = "")) +
geom_histogram(fill="white",alpha=0.5, position="identity") +
labs(title="Edad de los profesores encuestadxs", y="", x="Index")+
theme(plot.title = element_text(hjust = 0.5)) +
theme(panel.background=element_rect(fill = "white", colour = "white"))
#boxplot(dataDRE$P1_2,col = "pink") # Básico de R
ggplot(dataDRE, aes(x="", y=P1_2, color ="")) +
geom_boxplot() + coord_flip() + #Volteamos el gráfico
theme(legend.position = "top", axis.text.y = element_blank(),
panel.background=element_rect(fill = "white", colour = "white")) + #Quitamos categorías
geom_jitter(shape=16, position=position_jitter(0.2)) + #Agregamos los casos como puntos
labs(title = "Edad de los profesores encuestadxs", x="", y="Index")
#class(dataDRE$P1_7)
#str(dataDRE$P1_7)
dataDRE$P1_7 = as.factor(dataDRE$P1_7)
dataDRE$P1_7 = factor(dataDRE$P1_7,
levels = levels(dataDRE$P1_7),
labels = c("Nombrado","Contratado por concurso público", "Contratado por otra modalidad"),
ordered = F)
#Tabla de los docentes encuestados respecto a su condición laboral
table(dataDRE$P1_7)
prop.table(table(dataDRE$P1_7))*100
library(Hmisc)
describe(dataDRE$P1_7)
if(!require('googledrive')) install.pachages('googledrive')
if(!require('googledrive')) install.packages('googledrive')
if(!require('googledrive')) install.packages('googledrive')
library(googledrive)
drive_auth()
drive_find(n_max = 10)
# First thing I'm going to do is bring in the tidyverse and read our data
library(tidyverse)
data<-read.csv("./data/Seattle_Pet_Licenses.csv")
data
